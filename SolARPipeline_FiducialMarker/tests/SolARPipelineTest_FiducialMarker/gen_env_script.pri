
# @copyright Copyright (c) 2023 B-com http://www.b-com.com/
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# This code adds a post-build step that uses remaken to generate a script
# that sets the required environment variables to point ot the dependencies
# shared libraries in order run the executable.
#
# This .pri files takes two variable as parameters that must be set prior to
# including it in your .pro file.:
#    * GEN_ENV_SCRIPT_DEPS_FILE: path the the packagedependencies.txt
#                                listing the compile-time dependencies.
#    * GEN_ENV_SCRIPT_XPCF_FILE: path to the XPCF configuration file
#                                listing the runtime dependencies.
#
# A makefile target name will dynamically be created based on the XPCF file name.
# This allows for this .pri to be included multiple times with different
# parameters to generate scripts to set up the environment for multiple
# configurations.
#

!defined(GEN_ENV_SCRIPT_DEPS_FILE, var) {
  error("GEN_ENV_SCRIPT_DEPS_FILE variable is not defined")
}
!defined(GEN_ENV_SCRIPT_XPCF_FILE, var) {
  error("GEN_ENV_SCRIPT_XPCF_FILE variable is not defined")
}
!exists($${GEN_ENV_SCRIPT_DEPS_FILE}) {
  error("File pointed by GEN_ENV_SCRIPT_DEPS_FILE variable does not exist: $${GEN_ENV_SCRIPT_DEPS_FILE}")
}
!exists($${GEN_ENV_SCRIPT_XPCF_FILE}) {
  error("File pointed by GEN_ENV_SCRIPT_XPCF_FILE variable does not exist: $${GEN_ENV_SCRIPT_XPCF_FILE}")
}


verboseMessage("Generating remaken run env script with")
verboseMessage("  GEN_ENV_SCRIPT_DEPS_FILE = $${GEN_ENV_SCRIPT_DEPS_FILE}")
verboseMessage("  GEN_ENV_SCRIPT_XPCF_FILE = $${GEN_ENV_SCRIPT_XPCF_FILE}")

REMAKEN_RUN_ENV_CMD = "remaken run --env \
                                   --xpcf $${GEN_ENV_SCRIPT_XPCF_FILE} \
                                   --deps $${GEN_ENV_SCRIPT_DEPS_FILE} \
                                   --destination $${TARGETDEPLOYDIR}"
REMAKEN_RUN_ENV_DBG_CMD = "remaken run --config debug \
                                       --env \
                                       --xpcf $${GEN_ENV_SCRIPT_XPCF_FILE} \
                                       --deps $${GEN_ENV_SCRIPT_DEPS_FILE} \
                                       --destination $${TARGETDEPLOYDIR}"

win32 {
  ENV_SCRIPT_EXT = ".bat"
  MAKE_CMD = "jom"
}
else {
  ENV_SCRIPT_EXT = ".sh"
  MAKE_CMD = "make"
}

ENV_SCRIPT_XPCF_BASE_NAME = $$basename(GEN_ENV_SCRIPT_XPCF_FILE)
ENV_SCRIPT_XPCF_WITHOUT_EXT = $$replace(ENV_SCRIPT_XPCF_BASE_NAME,".xml","")
ENV_SCRIPT_NAME_NOEXT = "$${TARGET}_$${ENV_SCRIPT_XPCF_WITHOUT_EXT}_prepare_env"
TARGET_ENV_SCRIPT_FILE_NAME = $${ENV_SCRIPT_NAME_NOEXT}$${ENV_SCRIPT_EXT}
ENV_SCRIPT_QMAKE_TARGET_NAME = install_env_script_$${ENV_SCRIPT_XPCF_WITHOUT_EXT}


# "Hack" for QTVS mode that does not use makefile targets -> use INSTALLS objects
# so that 'extra' member is used in .bat scripts generated by bd/qmake QTVS rules
win32:if(!isEmpty(_SOLAR_USE_QTVS)) {

  CONFIG(release,debug|release) {
    $${ENV_SCRIPT_QMAKE_TARGET_NAME}.extra = "$${REMAKEN_RUN_ENV_CMD} \
                                              && move $${TARGETDEPLOYDIR}\\prepare_project_env.bat \
                                                      $${TARGETDEPLOYDIR}\\$${TARGET_ENV_SCRIPT_FILE_NAME}"
  }
  CONFIG(debug,debug|release) {
    $${ENV_SCRIPT_QMAKE_TARGET_NAME}.extra = "$${REMAKEN_RUN_ENV_DBG_CMD} \
                                              && move $${TARGETDEPLOYDIR}\\prepare_project_env.bat \
                                                      $${TARGETDEPLOYDIR}\\$${TARGET_ENV_SCRIPT_FILE_NAME}"
  }
  INSTALLS += $${ENV_SCRIPT_QMAKE_TARGET_NAME}
}
else {

  $${ENV_SCRIPT_QMAKE_TARGET_NAME}.target = $$system_path($${TARGETDEPLOYDIR}/$${TARGET_ENV_SCRIPT_FILE_NAME})
  CONFIG(release,debug|release) {
    $${ENV_SCRIPT_QMAKE_TARGET_NAME}.commands = $${REMAKEN_RUN_ENV_CMD}
  }
  CONFIG(debug,debug|release) {
    $${ENV_SCRIPT_QMAKE_TARGET_NAME}.commands = $${REMAKEN_RUN_ENV_DBG_CMD}
  }

  $${ENV_SCRIPT_QMAKE_TARGET_NAME}.commands += "&& $${QMAKE_MOVE} $$system_path($${TARGETDEPLOYDIR}/prepare_project_env$${ENV_SCRIPT_EXT}) \
                                                    $${eval($${ENV_SCRIPT_QMAKE_TARGET_NAME}.target)}"

  $${ENV_SCRIPT_QMAKE_TARGET_NAME}.depends = install

  QMAKE_EXTRA_TARGETS += $${ENV_SCRIPT_QMAKE_TARGET_NAME}
  QMAKE_POST_LINK += "&& $${MAKE_CMD} $${eval($${ENV_SCRIPT_QMAKE_TARGET_NAME}.target)}"

}
